server.port=8085
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
#eureka.client.service-url.defaultZone=http://eureka:password@127.0.0.1:8761/eureka
#spring.application.name=api-gateway

app.eureka-server=localhost
spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
logging.level.root= INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator= INFO
logging.level.org.springframework.cloud.gateway= TRACE


#logging.level.root=INFO
#logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=TRACE
#logging.level.org.springframework.cloud.gateway=INFO

# Product service route
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

# Order service route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

# discovery service route
spring.cloud.gateway.routes[2].id=discovery-server
spring.cloud.gateway.routes[2].uri=http://eureka:password@${app.eureka-server}:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
# Add filter to filter request
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

# discovery server static resources
spring.cloud.gateway.routes[3].id=discovery-server-static
spring.cloud.gateway.routes[3].uri=http://eureka:password@${app.eureka-server}:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

# sit for api-gateway keycloak
# spring boot at the start will read  doc and authorize end points to connect
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://127.0.0.1:8181/auth/realms/spring-boot-ms-realm
# spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8080/realms/spring-boot-microservices-realm

# spring.zipkin.base-url=http://localhost:9411
# spring.sleuth.sampler.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]